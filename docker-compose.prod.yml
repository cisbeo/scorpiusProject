version: '3.8'

services:
  api:
    build: .
    container_name: scorpius-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - DATABASE_URL=postgresql://scorpius:${DB_PASSWORD}@postgres:5432/scorpius_prod
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - UPLOAD_PATH=/app/uploads
      - TEMP_PATH=/app/temp
      - LOG_LEVEL=INFO
      - API_WORKERS=4
      - CORS_ORIGINS=["https://votre-domaine.fr"]
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./temp:/app/temp
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - scorpius-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15
    container_name: scorpius-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=scorpius_prod
      - POSTGRES_USER=scorpius
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=fr_FR.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    networks:
      - scorpius-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scorpius -d scorpius_prod"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: scorpius-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - scorpius-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: scorpius-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      api:
        condition: service_healthy
    networks:
      - scorpius-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  scorpius-network:
    driver: bridge