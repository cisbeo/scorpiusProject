[tool.poetry]
name = "scorpius-mvp"
version = "1.0.0"
description = "French Public Procurement Bid Manager Backend MVP"
authors = ["ScorpiusProject Team"]
readme = "README.md"
python = "^3.11"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.109.0"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.0"
alembic = "^1.13.0"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
redis = "^5.0.0"
pypdf2 = "^3.0.0"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
email-validator = "^2.1.0"
httpx = "^0.26.0"
spacy = "^3.7.0"
langchain = "^0.1.0"
langchain-community = "^0.0.10"
python-dotenv = "^1.0.0"
structlog = "^24.1.0"
tenacity = "^8.2.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
ruff = "^0.1.0"
mypy = "^1.8.0"
bandit = {extras = ["toml"], version = "^1.7.0"}
pre-commit = "^3.6.0"
ipython = "^8.0.0"
ipdb = "^0.13.0"
faker = "^22.0.0"
factory-boy = "^3.3.0"
httpx = "^0.26.0"

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []
fixable = ["ALL"]
unfixable = []
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "migrations",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -v --strict-markers --asyncio-mode=auto"
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "contract: Contract tests",
    "performance: Performance tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/migrations/*", "*/tests/*"]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "raise AssertionError",
]

[tool.bandit]
targets = ["src"]
skips = ["B101", "B601"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"